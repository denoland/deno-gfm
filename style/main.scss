@import "@primer/css/color-modes/themes/light.scss";
@import "@primer/css/color-modes/themes/dark.scss";
@import "@primer/css/markdown/index.scss";

.markdown-body {
  background-color: var(--color-canvas-default);
  color: var(--color-fg-default);

  a {
    color: var(--color-accent-fg);
    text-decoration: none;
  
    &:hover {
      text-decoration: underline;
    }
  }

  iframe {
    background-color: white;
    border: 0;
    margin-bottom: 16px;
  }

  svg.octicon {
    fill: currentColor;
  }

  .anchor>.octicon {
    display: inline;
  }
  
  figcaption {
    padding-top: 2px;
    text-align: center;
  }
}

.markdown-body .highlight .token, .gfm-highlight .token {
  &.keyword {
    color: var(--color-prettylights-syntax-keyword);
  }

  &.tag .token.class-name,
  &.tag .token.script .token.punctuation {
    color: var(--color-prettylights-syntax-storage-modifier-import);
  }

  &.operator,
  &.number,
  &.boolean,
  &.tag .token.punctuation,
  &.tag .token.script .token.script-punctuation,
  &.tag .token.attr-name {
    color: var(--color-prettylights-syntax-constant);
  }

  &.function {
    color: var(--color-prettylights-syntax-entity);
  }
  
  &.string {
    color: var(--color-prettylights-syntax-string);
  }
  
  &.comment {
    color: var(--color-prettylights-syntax-comment);
  }
  
  &.class-name {
    color: var(--color-prettylights-syntax-variable);
  }
  
  &.regex {
    color: var(--color-prettylights-syntax-string);
  }
  
  &.regex .regex-delimiter {
    color: var(--color-prettylights-syntax-constant);
  }
  
  &.tag .token.tag, &.property {
    color: var(--color-prettylights-syntax-entity-tag);
  }

  &.deleted {
    color: var(--color-prettylights-syntax-markup-deleted-text);
    background-color: var(--color-prettylights-syntax-markup-deleted-bg);
  }

  &.inserted {
    color: var(--color-prettylights-syntax-markup-inserted-text);
    background-color: var(--color-prettylights-syntax-markup-inserted-bg);
  }
}
